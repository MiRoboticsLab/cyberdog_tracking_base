<?xml version="1.0"?>
<root main_tree_to_execute="MainTree">
    <!-- ////////// -->
    <BehaviorTree ID="MainTree">
        <Control ID="RecoveryNode" name="TargetTracking" number_of_retries="5">
            <SequenceStar>
                <Action ID="ChangeGait" gait="7"/>
                <Control ID="PipelineSequence" name="NavigateWithReplanning">
                    <Decorator ID="RateController" hz="5.0">
                        <Decorator ID="ChargerUpdater" input_goal="{goal}" output_exception_code="{exception}" output_goals="{updated_goals}">
                            <Action ID="ComputePathSplinePoses" path="{path}" planner_id="SplinePlannerL" poses="{updated_goals}"/>
                        </Decorator>
                    </Decorator>
                    <Action ID="FollowPath" controller_id="FollowPath" goal_checker_id="GoalChecker" path="{path}" progress_checker_id="progress_checker"/>
                </Control>
                <Action ID="ChangeGait" gait="2"/>
                <Condition ID="IsBatteryInCharge"/>
            </SequenceStar>
            <ReactiveFallback name="RecoveryActions">
                <Decorator ID="ExceptionVerify" exception_code="{exception}" expected_code="1000">
                    <Action ID="SpinAndSearch" search_dist="1.57"/>
                </Decorator>
                <Decorator ID="ExceptionVerify" exception_code="{exception}" expected_code="3000">
                    <Action ID="ClearEntireCostmap" name="ClearEntireGlobalCostmap" service_name="global_costmap/clear_entirely_global_costmap"/>
                </Decorator>
                <ForceSuccess>
                    <Decorator ID="ExceptionVerify" exception_code="{exception}" expected_code="4000">
                        <Action ID="ClearEntireCostmap" name="ClearEntireLocalCostmap" service_name="local_costmap/clear_entirely_local_costmap"/>
                    </Decorator>
                </ForceSuccess>
            </ReactiveFallback>
        </Control>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="BackUp">
            <input_port name="backup_dist">Distance to backup</input_port>
            <input_port name="backup_speed">Speed at which to backup</input_port>
        </Action>
        <Action ID="ChangeGait">
            <input_port default="0" name="gait">the next motion for robot</input_port>
        </Action>
        <Decorator ID="ChargerUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <output_port name="output_exception_code">Exception code for the real reason</output_port>
            <output_port name="output_goals">Output goals set by subscription</output_port>
        </Decorator>
        <Action ID="ClearEntireCostmap">
            <input_port name="service_name">Service name</input_port>
        </Action>
        <Action ID="ComputePathSplinePoses">
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="poses">Destinations to plan splined</input_port>
        </Action>
        <Action ID="ComputePathThroughPoses">
            <input_port name="goals">Destinations to plan through</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ComputePathToPose">
            <input_port name="goal">Destination to plan to</input_port>
            <output_port name="path">Path created by ComputePathToPose node</output_port>
            <input_port name="planner_id"/>
            <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
        </Action>
        <Action ID="ControllerSelector">
            <input_port name="default_controller">Default controller of the controller selector</input_port>
            <output_port name="selected_controller">Name of the selected controller received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
        </Action>
        <Decorator ID="DistanceController">
            <input_port name="distance">Distance</input_port>
        </Decorator>
        <Condition ID="DistanceTraveled">
            <input_port name="distance">Distance to check if passed</input_port>
            <input_port name="global_frame">reference frame to check in</input_port>
            <input_port name="robot_base_frame">Robot frame to check relative to global_frame</input_port>
        </Condition>
        <Decorator ID="ExceptionVerify">
            <input_port name="exception_code">input code</input_port>
            <input_port name="expected_code">right code</input_port>
        </Decorator>
        <Action ID="FollowPath">
            <input_port default="FollowPath" name="controller_id"/>
            <input_port default="GoalChecker" name="goal_checker_id">Goal checker</input_port>
            <input_port name="path">Path to follow</input_port>
            <input_port default="progress_checker" name="progress_checker_id">Progress checker</input_port>
        </Action>
        <Action ID="GoalCheckerSelector">
            <input_port name="default_goal_checker">Default goal checker of the controller selector</input_port>
            <output_port name="selected_goal_checker">Name of the selected goal checker received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive goal checker selection commands</input_port>
        </Action>
        <Condition ID="GoalReached">
            <input_port name="goal">Destination</input_port>
        </Condition>
        <Condition ID="GoalUpdated"/>
        <Decorator ID="GoalUpdater">
            <input_port name="input_goal">Original goal in</input_port>
            <output_port name="output_goal">Output goal set by subscription</output_port>
        </Decorator>
        <Condition ID="InitialPoseReceived"/>
        <Condition ID="IsBatteryInCharge"/>
        <Condition ID="IsBatteryLow">
            <input_port name="battery_topic">Topic for battery info</input_port>
            <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
            <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
        </Condition>
        <Condition ID="IsStuck"/>
        <Action ID="NavigateThroughPoses">
            <input_port name="goals">Goals</input_port>
        </Action>
        <Action ID="NavigateToPose">
            <input_port name="goal">Goal</input_port>
        </Action>
        <Control ID="PipelineSequence"/>
        <Action ID="PlannerSelector">
            <input_port name="default_planner">Default planner of the planner selector</input_port>
            <output_port name="selected_planner">Name of the selected planner received from the topic subcription</output_port>
            <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
        </Action>
        <Decorator ID="RateController">
            <input_port name="hz">Rate</input_port>
        </Decorator>
        <Control ID="RecoveryNode">
            <input_port name="number_of_retries">Number of retries</input_port>
        </Control>
        <Action ID="ReinitializeGlobalLocalization"/>
        <Action ID="RemovePassedGoals">
            <input_port name="input_goals">Input goals to remove if passed</input_port>
            <output_port name="output_goals">Set of goals after removing any passed</output_port>
            <input_port name="radius">Radius tolerance on a goal to consider it passed</input_port>
        </Action>
        <Control ID="RoundRobin"/>
        <Decorator ID="SingleTrigger"/>
        <Decorator ID="SpeedController">
            <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
            <input_port name="max_rate">Maximum rate</input_port>
            <input_port name="max_speed">Maximum speed</input_port>
            <input_port name="min_rate">Minimum rate</input_port>
            <input_port name="min_speed">Minimum speed</input_port>
        </Decorator>
        <Action ID="Spin">
            <input_port name="spin_dist">Spin distance</input_port>
        </Action>
        <Action ID="SpinAndSearch">
            <input_port name="search_dist">Spin distance</input_port>
        </Action>
        <Condition ID="TimeExpired">
            <input_port name="seconds">Time to check if expired</input_port>
        </Condition>
        <Action ID="TrackingModeDecider">
            <input_port name="input_tracking_mode">Original tracking mode</input_port>
            <output_port name="output_tracking_mode">Output tracking mode by decision</output_port>
        </Action>
        <Condition ID="TransformAvailable">
            <input_port name="child">Child frame for transform</input_port>
            <input_port name="parent">Parent frame for transform</input_port>
        </Condition>
        <Action ID="TruncatePath">
            <input_port name="distance">Distance before goal to truncate</input_port>
            <input_port name="input_path">Path to truncate</input_port>
            <output_port name="output_path">Truncated path to utilize</output_port>
        </Action>
        <Action ID="Wait">
            <input_port name="wait_duration">Wait time</input_port>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>

