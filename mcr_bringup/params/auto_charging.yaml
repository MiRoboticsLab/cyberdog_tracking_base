bt_navigatorautomatic_recharge_rclcpp_node:
  ros__parameters:
    use_sim_time: True
    global_frame: base_link_leg
    charger_updater_topic: chargetolidar
    max_pose_inuse: 0
    dist_throttle: 0.0

controller_server:
  ros__parameters:
    use_sim_time: True
    fake_progress_checkerL:
      plugin: "mcr_tracking_components::FakeProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # DWB parameters
    general_goal_checkerL:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 3.1
    TrackingTargetL:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.1
      min_vel_y: 0.0
      max_vel_x: 0.1
      max_vel_y: 0.01
      max_vel_theta: 0.6
      min_speed_xy: 0.0
      max_speed_xy: 0.10
      min_speed_theta: 0.0
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 1.0
      acc_lim_y: 1.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: -2.5
      decel_lim_theta: -3.2
      vx_samples: 10
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: [
          #"RotateToGoal",
          # # "Oscillation",
          #"BaseObstacle",
          "GoalAlign",
          "PathAlign",
          "PathDist",
          "GoalDist",
          "KeepTargetInsight",
        ]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0
      KeepTargetInsight.class: mcr_tracking_components::KeepTargetInsightCritic
      KeepTargetInsight.scale: 42.0

planner_server:
  ros__parameters:
    SplinePlannerL:
      use_sim_time: True
      plugin: mcr_global_planner/MCRSplinePlanner
      costmap: rolling_window_costmap
      spline_name: linear
      pose_topic: "tracking_pose_in_map"
      # pose_topic: "target_traces"
      linear:
        plugin: mcr_planner_plugins::LinearInterpolation
        # plugin: mcr_planner_plugins::PolynomialFitting
        # plugin: mcr_planner_plugins::BSpliner
        # plugin: mcr_planner_plugins::PolynomialInterpolation
