bt_navigatortracking_target_rclcpp_node:  
  ros__parameters:
    use_sim_time: False
    # TargetUpdaterNode
    global_frame: vodom  
    goal_updater_topic: tracking_pose
    overtime: 1.50
    max_pose_inuse: 0
    dist_throttle: 0.0
    orientation_deriver: mcr_tracking_components::KalmanOrientationDeriver

local_costmap_tracking:
  local_costmap_tracking:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: vodom
      robot_base_frame: base_link
      transform_tolerance: 1.2
      use_sim_time: False
      rolling_window: true
      width: 8
      height: 8
      resolution: 0.1
      footprint: "[[0.35, 0.2], [-0.28, 0.15], [-0.28, -0.15], [0.35, -0.2]]"
      plugins: ["obstacle_layer", "inflation_layer"]
      elevation_layer:
        plugin: "cyberdog_gridmap_costmap_plugin/GridMapCostLayer"
        enabled: True
        min_pass_threshold: -0.15
        max_pass_threshold: 0.15
        topic: elevation_map_raw 
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.35
      range_layer:
        plugin: "nav2_costmap_2d::RangeSensorLayer"
        enabled: True
        topics: ['ultrasonic_payload']
        input_sensor_type: VARIABLE
        phi: 1.2
        inflate_cone: 1.0
        no_readings_timeout: 0.0
        clear_threshold: 0.2
        mark_threshold: 0.8
        clear_on_max_reading: false
      obstacle_layer:
        plugin: "mcr_tracking_components::ObstacleLayer"
        enabled: True
        use_tracking_mode: True 
        tracking_pose_invisible_radius: 0.5
        tracking_pose_topic: tracking_pose
        observation_sources: scan
        scan:
          topic: scan
          max_obstacle_height: 20.0
          min_obstacle_height: -20.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          obstacle_range: 10.0
          raytrace_range: 10.0        
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: scan
          max_obstacle_height: 20.0
          min_obstacle_height: -20.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 6.0
          raytrace_min_range: 0.0
          obstacle_max_range: 5.5
          obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    fake_progress_checker:
      plugin: "mcr_tracking_components::FakeProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    xy_goal_checker:
      stateful: True
      # plugin: "nav2_controller::SimpleGoalChecker"
      plugin: "mcr_tracking_components::XYGoalChecker"
      xy_goal_tolerance: 0.3
      yaw_goal_tolerance: 0.2
    # DWB parameters
    TrackingTarget:
      plugin: "dwb_core::DWBLocalPlanner"
      costmap: local_costmap_tracking
      debug_trajectory_details: True
      trajectory_generator_name: dwb_plugins::StandardTrajectoryGenerator #dwb_plugins::LimitedAccelGenerator
      min_vel_x: 0.0
      min_vel_y: -0.3
      max_vel_x: 1.2
      max_vel_y: 0.3
      max_vel_theta: 1.57
      min_speed_xy: 0.0
      max_speed_xy: 1.5
      min_speed_theta: 0.0
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 2.2
      acc_lim_y: 1.2
      acc_lim_theta: 3.0
      decel_lim_x: -2.5
      decel_lim_y: -1.0
      decel_lim_theta: -3.2
      vx_samples: 8
      vy_samples: 6
      vtheta_samples: 6
      sim_time: 0.5
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 1.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: [ "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "KeepTargetInsight"]
      BaseObstacle.scale: 20.0
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      KeepTargetInsight.class: mcr_tracking_components::KeepTargetInsightCritic
      KeepTargetInsight.scale: 26.0
      KeepTargetInsight.target_topic: tracking_pose
      # RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -0.4

rolling_window_costmap:
  rolling_window_costmap:
    ros__parameters:
      update_frequency: 0.0
      publish_frequency: 1.0
      global_frame: vodom
      robot_base_frame: base_link
      rolling_window: true
      transform_tolerance: 1.2
      use_sim_time: False
      width: 16
      height: 16
      footprint: "[[0.35, 0.2], [-0.28, 0.15], [-0.28, -0.15], [0.35, -0.2]]"
      footprint_padding: 0.05

      resolution: 0.05
      track_unknown_space: false
      plugins: ["obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "mcr_tracking_components::ObstacleLayer"
        enabled: True
        use_tracking_mode: True
        tracking_pose_invisible_radius: 0.4
        tracking_pose_topic: tracking_pose        
        observation_sources: scan
        scan:
          topic: scan
          max_obstacle_height: 20.0
          min_obstacle_height: -20.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 6.0
          raytrace_min_range: 0.0
          obstacle_max_range: 5.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.43
      always_send_full_costmap: True
  rolling_window_costmap_client:
    ros__parameters:
      use_sim_time: False
  rolling_window_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False


planner_server:
  ros__parameters:
    SplinePlanner:
      use_sim_time: False
      plugin: mcr_global_planner/MCRSplinePlanner
      costmap: rolling_window_costmap
      spline_name: bezier
      pose_topic: "tracking_pose_in_map"
      # pose_topic: "target_traces"
      bezier:
        plugin: mcr_planner_plugins::LinearInterpolation
        # plugin: mcr_planner_plugins::BezierSpliner
        # plugin: mcr_planner_plugins::PolynomialFitting
        # plugin: mcr_planner_plugins::BSpliner
        # plugin: mcr_planner_plugins::PolynomialInterpolation
    PotentialPlanner:
      use_sim_time: False
      plugin: mcr_global_planner/MCRGlobalPlanner
      costmap: rolling_window_costmap
      potential_calculator: mcr_planner_plugins::AStar  #Dijkstra 
      traceback: mcr_planner_plugins::GradientPath #GridPath    #VonNeumannPath  
      publish_potential: false
      print_statistics: false
      neutral_cost: 50
      scale: 3.0
      path_caching: true
      improvement_threshold: -1.0
      use_kernel: true
      unknown_interpretation: lethal

